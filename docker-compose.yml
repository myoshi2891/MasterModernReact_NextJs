services:
  web:
    build:
      context: .
    platform: linux/arm64/v8
    working_dir: /app
    command: npm run dev -- --hostname 0.0.0.0
    volumes:
      - .:/app
      - web-node-modules:/app/node_modules
      - web-next-cache:/app/.next
    env_file:
      - .env
    environment:
      NODE_ENV: development
      SUPABASE_URL: ${SUPABASE_URL}
      SUPABASE_SERVICE_ROLE_KEY: ${SUPABASE_SERVICE_ROLE_KEY}
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "3000:3000"

  postgres:
    image: supabase/postgres:17.6.1.011
    platform: linux/arm64/v8
    restart: unless-stopped
    environment:
      TZ: Asia/Tokyo
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      PGDATA: /var/lib/postgresql/data
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./docker/initdb/00_create_roles.sql:/docker-entrypoint-initdb.d/00_create_roles.sql:ro
      - ./docker/initdb/01_create_supabase_admin.sh:/docker-entrypoint-initdb.d/01_create_supabase_admin.sh:ro
      - ./docker/initdb/05_set_timezone.sql:/docker-entrypoint-initdb.d/05_set_timezone.sql:ro
      - ./docker/initdb/10_apply_migrations.sh:/docker-entrypoint-initdb.d/10_apply_migrations.sh:ro
      - ./supabase/migrations:/docker-entrypoint-initdb.d/migrations:ro
      - ./docker/postgres-healthcheck.sh:/usr/local/bin/postgres-healthcheck.sh:ro
    ports:
      - "54322:5432"
    healthcheck:
      test: ["CMD-SHELL", "sh /usr/local/bin/postgres-healthcheck.sh"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s
    stop_grace_period: 60s

volumes:
  postgres-data:
  web-node-modules:
  web-next-cache:
